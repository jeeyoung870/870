/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-04-03 12:42:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.manageIntro;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class introManagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("#wrap {\r\n");
      out.write("\theight: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#wrap section>div>h1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 10px 0;\r\n");
      out.write("\tfont-size: 18px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#wrap .location-bar {\r\n");
      out.write("\tborder-bottom: 1px solid #efefef;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#wrap #myChart {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\theight: 210px;\r\n");
      out.write("\twidth: 380px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"wrap\">\r\n");
      out.write("\t\t<section>\r\n");
      out.write("\t\t\t<div class=\"location-bar\">\r\n");
      out.write("\t\t\t\t<h1>신규 회원가입 현황</h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<canvas id=\"myChart\"></canvas>\r\n");
      out.write("\t\t\t<div class=\"location-bar\">\r\n");
      out.write("\t\t\t\t<h1>주요 일정</h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tlet url2 = \"subscriberStatistics\"\r\n");
      out.write("\t\t\t\t$\r\n");
      out.write("\t\t\t\t\t\t.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl : url2,\r\n");
      out.write("\t\t\t\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\t\t\terror : function(error) {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"Error!\");\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(processedList) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar ctx = document.getElementById('myChart');\r\n");
      out.write("\t\t\t\t\t\t\t\tvar myChart = new Chart(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tctx,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlabels : [ '1월', '2월', '3월',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'4월', '5월', '6월', '7월',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'8월', '9월', '10월',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'11월', '12월' ], //chartLabels // labels: Object.keys(data),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdatasets : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlabel : '신규 회원가입자 수',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tdata : processedList.list, // chartData //  data: Object.values(data)\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 0.2)' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 99, 132, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(54, 162, 235, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 1)' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tborderWidth : 1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tscales : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tyAxes : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tticks : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbeginAtZero : true\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
