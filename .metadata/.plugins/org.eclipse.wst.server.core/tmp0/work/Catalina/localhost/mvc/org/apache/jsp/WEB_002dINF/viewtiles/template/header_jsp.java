/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-04-03 13:40:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.viewtiles.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/Jiyoung/gitTest/latest_jyjy_branch/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringMvcGitAttempt/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/tiles-jsp-3.0.8.jar", Long.valueOf(1614131675272L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1613358274103L));
    _jspx_dependants.put("jar:file:/C:/Users/Jiyoung/gitTest/latest_jyjy_branch/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringMvcGitAttempt/WEB-INF/lib/tiles-jsp-3.0.8.jar!/META-INF/tld/tiles-jsp.tld", Long.valueOf(1506773284000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/static/default.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/static/header/header.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/static/header/header.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#profile {\r\n");
      out.write("\twidth: 30px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tobject-fit: cover;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar socket = null;\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tlet url = window.location.host;\r\n");
      out.write("\t\r\n");
      out.write("\tlet pathname = window.location.pathname;\r\n");
      out.write("\tlet appCtx = \"/mvc\"\r\n");
      out.write("\t\r\n");
      out.write("\tlet root = url + appCtx;\r\n");
      out.write("\t\t\r\n");
      out.write("\tsocket = new WebSocket(\"ws://\" + root + \"/websocket/noti-ws\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t$(\".notification > img\").click(handleNotiClicked);\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction handleNotiClicked(){\r\n");
      out.write("\t\tlet notiNumber = $(\"#notiNumber\").text();\r\n");
      out.write("\t\tconsole.log(\"called\")\r\n");
      out.write("\t\tif (!(notiNumber == \"\")){\r\n");
      out.write("\t\t\tconsole.log(\"if passed\")\r\n");
      out.write("\t\t\t$(\"#notificationResultForm\").submit();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\tsocket.onopen = function(event){\r\n");
      out.write("\t\tconsole.log(\"connection opened\")\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tsocket.onmessage = function(event){\r\n");
      out.write("\t\tconsole.log(event.data)\r\n");
      out.write("\t\tlet notiNumber = $(\"#notiNumber\").text();\r\n");
      out.write("\t\tlet html = \"<input class = 'recievedNoti' name='notiData'\"\r\n");
      out.write("\t\tif (!notiNumber || notiNumber == \"\"){\r\n");
      out.write("\t\t\t$(\"#notiNumber\").text(\"1\");\r\n");
      out.write("\t\t\thtml += \"value='\" + event.data + \"'></input>\"\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#notiNumber\").text(parseInt(notiNumber) + 1);\r\n");
      out.write("\t\t\thtml += \"value='\" + event.data + \"'></input>\"\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#notificationResultForm\").append(html);\r\n");
      out.write("\t}\r\n");
      out.write("\tsocket.onerror = function(event){\r\n");
      out.write("\t\tconsole.log(\"error occured\")\r\n");
      out.write("\t}\r\n");
      out.write("\tsocket.onclose = function(event){\r\n");
      out.write("\t\tconsole.log(\"connection closed\")\r\n");
      out.write("\t\talert(event.code)\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<button class=\"hamburger\">&#9776;</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t<a href=\"main\"> <img\r\n");
      out.write("\t\t\t\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/static/WHITE.png\">\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"notification\">\r\n");
      out.write("\t\t\t<img\r\n");
      out.write("\t\t\t\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/notification/whitering.png\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<div class=\"menu\">\r\n");
      out.write("\t\t<!-- <span><a href=\"#\" class=\"if1\">회원가입 / 로그인</a></span> -->\r\n");
      out.write("\t\t\t<span> <script>\r\n");
      out.write("\t\t\tlet id = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.Email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\tlet email = sessionStorage.getItem(\"user_email\");\r\n");
      out.write("\t\t\tlet img = sessionStorage.userImg;\r\n");
      out.write("\t\t\tlet name = sessionStorage.user_name;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!(id) && !(email)) {\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t\t\t.write('<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/user/register\" style=\"color: black\">회원가입</a>'\r\n");
      out.write("\t\t\t\t\t\t\t\t+ '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/login/SocialLogin\" style=\"color: red\">소셜 로그인</a>' \r\n");
      out.write("\t\t\t\t\t\t\t\t+ '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/loginform\" style=\"color: blue\">아이디로 로그인</a>')\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t// 일반로그인일 경우\r\n");
      out.write("\t\t\t\tif(email == null && id != \"ADMIN_N1\"){\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t\t\t.write(id\r\n");
      out.write("\t\t\t\t\t\t\t\t+ ' 회원님 환영합니다!'\r\n");
      out.write("\t\t\t\t\t\t\t\t+ '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/hils/j_spring_security_logout\" style=\"color: blue\">로그아웃</a>')\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse if(id == \"ADMIN_N1\"){\r\n");
      out.write("\t\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t\t\t\t.write(id\r\n");
      out.write("\t\t\t\t\t\t\t\t\t+ ' 관리자님 어서오세요!'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t+ '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/hils/j_spring_security_logout\" style=\"color: blue\">로그아웃</a>')\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 소셜로그인일 경우\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\tdocument\r\n");
      out.write("\t\t\t\t.write('<img id=\"profile\" src=\"' + sessionStorage.userImg + '\">&nbsp;&nbsp;'\r\n");
      out.write("\t\t\t\t\t\t+ sessionStorage.user_name\r\n");
      out.write("\t\t\t\t\t\t+ ' 회원님 환영합니다!'\r\n");
      out.write("\t\t\t\t\t\t+ '<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/login/logout\" style=\"color: red\">로그아웃</a>')\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li> <script>\r\n");
      out.write("\t\t\t<!-- 로그인 시에 DB에서 권한을 가져와서 각 사용자에게 해당 권한을 부여하고, 해당 권한에 따라 로그인 시에 이동하는 페이지가 바뀌도록 가능. 예) https://jiyongpark-dev.tistory.com/4  -->\r\n");
      out.write("\t\t\t<!-- 이번에는 그냥 간편하게 저장되어 있는 user_id로 비교해서 메뉴 변경하게 함 -->\r\n");
      out.write("\t\t\tlet Role_id = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.Email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\tlet Role_email = sessionStorage.getItem(\"user_email\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (Role_id == \"ADMIN_N1\") {\r\n");
      out.write("\t\t\t\tdocument.write('<a href=\"manageIntro\" style=\"color: black\">관리자페이지</a>')\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\telse if(Role_id == \"\" && Role_email == \"\") {\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\tdocument.write('<a href=\"mypage\" style=\"color: black\">마이페이지</a>')\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script></li>\r\n");
      out.write("\t\t\t<li><a href=\"myalarm\">내 알림</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"myActivitySchedule\">나의 활동</a></li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<li><a href=\"#\" class=\"iframe\">커뮤니티</a>\r\n");
      out.write("\t\t\t\t<ul class=\"sub\">\r\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/community/goBoard\">게시판</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">공지사항 </a> <!-- <li><a href=\"#\">test</a></li> -->\r\n");
      out.write("\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t<li><a href=\"#\" class=\"iframe\">타임라인</a>\r\n");
      out.write("\t\t\t\t<ul class=\"sub\">\r\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/timeLine1/goHilslinderCal\">힐린더</a>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"timeline\">타임라인 </a>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"custcenter\" class=\"iframe\">고객센터</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"usersetting\" class=\"iframe\">설정 및 회원정보</a></li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- <li><a href=\"manageIntro\">관리자 페이지</a></li> -->\r\n");
      out.write("\t\t\t<!-- <li><a href=\"logout\" class=\"iframe\">로그아웃</a></li> -->\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<button class=\"cross\">&#735;</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/viewtiles/template/header.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/viewtiles/template/header.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/viewtiles/template/header.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
